// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using data.Context;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250518182827_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("library.Model.LeituraRfid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("RfidId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("SensorId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("LEITURARFID", (string)null);
                });

            modelBuilder.Entity("library.Model.Moto", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("Patioid")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.HasIndex("Patioid");

                    b.ToTable("MOTO", (string)null);
                });

            modelBuilder.Entity("library.Model.Patio", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<bool>("ativo")
                        .HasColumnType("BOOLEAN");

                    b.Property<int>("capacidadeTotal")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("dataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("vagasDisponiveis")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.ToTable("PATIO", (string)null);
                });

            modelBuilder.Entity("library.Model.Sensor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("codigoIdentificacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("dtInstalacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("dtUltimaLeitura")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("localizacaoFisica")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.ToTable("SENSOR", (string)null);
                });

            modelBuilder.Entity("library.Model.Usuario", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("cpf")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("dtAlteracao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("dtCriacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("perfil")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("library.Model.Moto", b =>
                {
                    b.HasOne("library.Model.Patio", null)
                        .WithMany("motos")
                        .HasForeignKey("Patioid");
                });

            modelBuilder.Entity("library.Model.Patio", b =>
                {
                    b.Navigation("motos");
                });
#pragma warning restore 612, 618
        }
    }
}
